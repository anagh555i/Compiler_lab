decl
  int a,b,n;
  int arr[10];
  int swap(int index, int newindex);
  int readarr(int temp);
  int writearr(int temp);
  int partition (int low, int high);
  int quicksort(int low,int high);
enddecl

int swap(int index ,int newindex)
{
  decl
    int s;
  enddecl

  begin
    s = arr[index];
    arr[index] = arr[newindex];
    arr[newindex] = s;
    return s;
  end
}

int readarr(int temp){
  decl
    int count,x;
  enddecl

  begin
    count=0;
    while(count < temp) {
      read(x);
      arr[count]=x;
      count=count+1;
    }
    return count;
  end
}

int writearr(int temp){
  decl
    int count;
  enddecl

  begin
    count = 0;

    while(count < temp) {
      write(arr[count]);    
      count = count+1;
    }

    return count;
  end
}

int partition (int low, int high)
{
  decl
    int pivot,t;
    int i,j;
  enddecl

  begin
    pivot = arr[high];
    j = low;
    i = low;

    while(i < high){
      if (arr[i] <= pivot){
        t = swap (i , j);
        j = j+1;
      }
      i=i+1;
    }
    i = swap (j , high);
    return j;
  end
}

int quicksort (int low , int high){
  decl
    int pp,temp,t;
  enddecl

  begin

    if (low < high) {
      pp = partition (low , high);
      temp = quicksort(pp+1,high);
      t = quicksort(low , pp-1);    
    }
    return 1;
  end
}

void main()
{
  decl
    int junk;
    int temp;
  enddecl

  begin

    read(n);
    junk = readarr(n);
    temp = quicksort(0,n-1);
    junk = writearr(n);

    return ;
  end
}
