type
    node{
        int val;
        node* next;
    }
endtype

class
    cnode{
        decl
        int val;
        node* next;
        enddecl
        methods:
        int what(){
            decl
                int c;
                cnode* b;
            enddecl
            begin
                this->val=49;
                c=200;
                b=malloc(node);
                return 3;
            end
        }
        int whatthe(){
            decl
                int c;
                node * b;
            enddecl
            begin
                c=200;
                b=malloc(node);
                return 3;
            end
        }
    }
    dnode extends cnode{
        decl
        int val;
        node* next;
        enddecl
        methods:
        int what(int a){
            decl
                int c;
                node * b;
            enddecl
            begin
                c=200;
                b=malloc(node);
                return 3;
            end
        }
        int whatthe(){
            decl
                int c;
                node * b;
            enddecl
            begin
                c=200;
                b=malloc(node);
                return 3;
            end
        }
    }
endclass

decl
    int i,j,n;
    int arr[10];
    int k;
    string s;
    int funct1(int a);
    int funct3(int c);
enddecl

int funct1(int a){
    decl
        int c;
        node * b;
    enddecl
    begin
        c=200;
        a=c;
        b=malloc(node);
        return 1;
    end
}
void main(){
    decl 
        node n;
        cnode* cn;
        int p;
    enddecl
    begin
        i=funct1(20);
        write(i);
        //n=funct1(i);
        // n->next->val=45;
        write(i);
        //write(n->next->val);
        return ;
    end
}